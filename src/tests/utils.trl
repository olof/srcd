% ex:ts=2:sw=2:sts=2:et:ft=erlang
% -*- tab-width: 2; c-basic-offset: 2; indent-tabs-mode: nil -*-

-include_lib("eunit/include/eunit.hrl").

hex_to_int_test_() ->
  [
    ?_assertEqual(15, hex_to_int("F")),
    ?_assertEqual(15, hex_to_int("0F")),
    ?_assertEqual(255, hex_to_int("FF"))
  ].

hex_to_bin_sha1_test_() ->
  [?_assertEqual([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15],
                 hex_to_bin_sha1("000000000000000000000000000000000000000F"))].

-define(_ok(V, In), ?_assertEqual({ok, V}, cmd_split(In))).

cmd_split_test_() ->
  [
    ?_ok([[]], ""),
    ?_ok(["true"], "true"),
    ?_ok(["echo", "hej"], "echo hej"),
    ?_ok(["echo", "hej\\"], "echo hej\\\\"),
    ?_ok(["echo", "foo bar"], "echo foo\\ bar"),
    ?_ok(["echo", "foo bar"], "echo \"foo bar\""),
    ?_ok(["echo", "foo bar"], "echo 'foo bar'"),
    ?_ok(["echo", "foobar baz"], "echo foo'bar baz'"),
    ?_ok(["echo", "foo bar baz"], "echo foo' bar baz'"),
    ?_ok(["echo", "foo", "bar", "baz"], "echo foo bar baz"),
    ?_assertEqual(error, cmd_split("echo 'foo bar")),
    ?_assertEqual(error, cmd_split("echo \"foo bar"))
  ].
