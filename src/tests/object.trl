% ex:ts=2:sw=2:sts=2:et:ft=erlang
% -*- tab-width: 2; c-basic-offset: 2; indent-tabs-mode: nil -*-

-include_lib("eunit/include/eunit.hrl").

-define(STAMP, #stamp{
  name="Unit Test",
  email="ceo@example.com",
  time=1651498600,
  tz="+0200"
}).

-define(STAMP_STR_TIME, #stamp{
  name="Unit Test",
  email="ceo@example.com",
  time="1651498600",
  tz="+0200"
}).

commit_no_parents_test_() ->
  Commit = #commit{
    tree="4b825dc642cb6eb9a060e54bf8d69288fbee4904",
    author=?STAMP,
    committer=?STAMP,
    msg="test\n"
  },

  [
    ?_assertEqual(
      {commit, string:join([
        "tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "author Unit Test <ceo@example.com> 1651498600 +0200",
        "committer Unit Test <ceo@example.com> 1651498600 +0200",
        "",
        "test\n"
      ], "\n")},
      encode(Commit)
    ),
    ?_assertEqual(["4b825dc642cb6eb9a060e54bf8d69288fbee4904"], deps(Commit))
  ].

commit_single_parent_test_() ->
  Commit = #commit{
    tree="4b825dc642cb6eb9a060e54bf8d69288fbee4904",
    author=?STAMP,
    committer=?STAMP,
    parents=["4bd8bdbdc6661187350f6e6141577c3d7cda1ac6"],
    msg="test\n"
  },

  [
    ?_assertEqual(
      {commit, string:join([
        "tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "parent 4bd8bdbdc6661187350f6e6141577c3d7cda1ac6",
        "author Unit Test <ceo@example.com> 1651498600 +0200",
        "committer Unit Test <ceo@example.com> 1651498600 +0200",
        "",
        "test\n"
      ], "\n")},
      encode(Commit)
    ),
    ?_assertEqual(
      [
        "4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "4bd8bdbdc6661187350f6e6141577c3d7cda1ac6"
      ],
      deps(Commit)
    )
  ].

commit_two_parents_test_() ->
  Commit = #commit{
    tree="4b825dc642cb6eb9a060e54bf8d69288fbee4904",
    author=?STAMP,
    committer=?STAMP,
    parents=["4bd8bdbdc6661187350f6e6141577c3d7cda1ac6",
             "c64283c48a44496dd0a52fa2850728efefd81df8"],
    msg="test\n"
  },

  [
    ?_assertEqual(
      {commit, string:join([
        "tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "parent 4bd8bdbdc6661187350f6e6141577c3d7cda1ac6",
        "parent c64283c48a44496dd0a52fa2850728efefd81df8",
        "author Unit Test <ceo@example.com> 1651498600 +0200",
        "committer Unit Test <ceo@example.com> 1651498600 +0200",
        "",
        "test\n"
      ], "\n")},
      encode(Commit)
    ),
    ?_assertEqual(
      [
        "4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "4bd8bdbdc6661187350f6e6141577c3d7cda1ac6",
        "c64283c48a44496dd0a52fa2850728efefd81df8"
      ],
      deps(Commit)
    )
  ].

commit_build_three_parents_test_() ->
  Commit = #commit{
    tree="4b825dc642cb6eb9a060e54bf8d69288fbee4904",
    author=?STAMP,
    committer=?STAMP,
    parents=["4bd8bdbdc6661187350f6e6141577c3d7cda1ac6",
             "c64283c48a44496dd0a52fa2850728efefd81df8",
             "c64283c48a44496dd0a52fa2850728efefd81df9"],
    msg="test\n"
  },

  [
    ?_assertEqual(
      {commit, string:join([
        "tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "parent 4bd8bdbdc6661187350f6e6141577c3d7cda1ac6",
        "parent c64283c48a44496dd0a52fa2850728efefd81df8",
        "parent c64283c48a44496dd0a52fa2850728efefd81df9",
        "author Unit Test <ceo@example.com> 1651498600 +0200",
        "committer Unit Test <ceo@example.com> 1651498600 +0200",
        "",
        "test\n"
      ], "\n")},
      encode(Commit)
    ),
    ?_assertEqual(
      [
        "4b825dc642cb6eb9a060e54bf8d69288fbee4904",
        "4bd8bdbdc6661187350f6e6141577c3d7cda1ac6",
        "c64283c48a44496dd0a52fa2850728efefd81df8",
        "c64283c48a44496dd0a52fa2850728efefd81df9"
      ],
      deps(Commit)
    )
  ].

commit_time_as_str_test_() ->
  IntTime = #commit{
    tree="4b825dc642cb6eb9a060e54bf8d69288fbee4904",
    author=?STAMP,
    committer=?STAMP,
    parents=["4bd8bdbdc6661187350f6e6141577c3d7cda1ac6"],
    msg="test\n"
  },
  StrTime = #commit{
    tree="4b825dc642cb6eb9a060e54bf8d69288fbee4904",
    author=?STAMP_STR_TIME,
    committer=?STAMP_STR_TIME,
    parents=["4bd8bdbdc6661187350f6e6141577c3d7cda1ac6"],
    msg="test\n"
  },
  [?_assertEqual(encode(IntTime), encode(StrTime))].

tree_empty_test_() ->
  [
    ?_assertEqual([], deps(#tree{items=[]})),
    ?_assertEqual({tree, []}, encode(#tree{items=[]}))
  ].

tree_single_blob_test_() ->
  Entries = [
    #tree_node{
      mode="100644",
      name="test",
      object="da39a3ee5e6b4b0d3255bfef95601890afd80709"
    }
  ],
  H = srcd_utils:hex_to_bin_sha1("da39a3ee5e6b4b0d3255bfef95601890afd80709"),

  [
    ?_assertEqual(["da39a3ee5e6b4b0d3255bfef95601890afd80709"],
                  deps(#tree{items=Entries})),
    ?_assertEqual({tree, "100644 test\0" ++ H},
                  encode(#tree{items=Entries}))
  ].

parse_delta_size_test_() ->
  [
    ?_assertEqual({976, [255]}, parse_delta_size([208, 7, 255]))
  ].
